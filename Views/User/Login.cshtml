@{
    ViewData["Title"] = "Login";
    Layout = null; // Use a clean layout for login
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Predictive Maintenance</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <style>
        :root {
            /* Light mode colors */
            --bg-gradient-light: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --container-bg-light: rgba(255, 255, 255, 0.95);
            --text-primary-light: #2c3e50;
            --text-secondary-light: #6c757d;
            --input-bg-light: rgba(248, 249, 250, 0.8);
            --input-border-light: rgba(108, 117, 125, 0.2);
            --pattern-light: rgba(255, 255, 255, 0.1);
            --divider-light: #e9ecef;
            
            /* Dark mode colors */
            --bg-gradient-dark: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            --container-bg-dark: rgba(30, 30, 45, 0.95);
            --text-primary-dark: #ffffff;
            --text-secondary-dark: #a0a0a0;
            --input-bg-dark: rgba(40, 40, 55, 0.8);
            --input-border-dark: rgba(60, 60, 80, 0.5);
            --pattern-dark: rgba(255, 255, 255, 0.05);
            --divider-dark: #4a4a5a;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: var(--bg-gradient-light);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            /* Allow vertical scrolling if needed */
            overflow-x: hidden;
            overflow-y: auto;
            transition: all 0.3s ease;
        }

        body.dark-mode {
            background: var(--bg-gradient-dark);
        }

        /* Animated background particles */
        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100%" height="100%" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
            animation: float 20s ease-in-out infinite;
            transition: opacity 0.3s ease;
        }

        body.dark-mode::before {
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.05)" stroke-width="0.5"/></pattern></defs><rect width="100%" height="100%" fill="url(%23grid)"/></svg>');
            opacity: 0.2;
        }

        @@keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }

        .login-container {
            background: var(--container-bg-light);
            backdrop-filter: blur(20px);
            border-radius: 25px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            width: 100%;
            max-width: 450px;
            padding: 3rem 2.5rem;
            position: relative;
            z-index: 10;
            animation: slideUp 0.8s ease-out;
            transition: all 0.3s ease;
        }

        body.dark-mode .login-container {
            background: var(--container-bg-dark);
            border: 1px solid rgba(100, 100, 120, 0.3);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);
        }

        /* Theme Toggle Button */
        .theme-toggle {
            position: absolute;
            top: 1.5rem;
            right: 1.5rem;
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 50px;
            padding: 0.75rem;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 20;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
        }

        .theme-toggle:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: scale(1.1);
        }

        body.dark-mode .theme-toggle {
            background: rgba(40, 40, 55, 0.7);
            border: 1px solid rgba(100, 100, 120, 0.4);
        }

        body.dark-mode .theme-toggle:hover {
            background: rgba(60, 60, 80, 0.8);
        }

        .theme-toggle i {
            font-size: 1.2rem;
            color: white;
            transition: all 0.3s ease;
        }

        .theme-toggle .sun-icon {
            opacity: 1;
            transform: rotate(0deg);
        }

        .theme-toggle .moon-icon {
            opacity: 0;
            transform: rotate(180deg);
            position: absolute;
        }

        body.dark-mode .theme-toggle .sun-icon {
            opacity: 0;
            transform: rotate(180deg);
        }

        body.dark-mode .theme-toggle .moon-icon {
            opacity: 1;
            transform: rotate(0deg);
        }

        @@keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .login-header {
            text-align: center;
            margin-bottom: 2.5rem;
        }

        .logo-container {
            background: linear-gradient(135deg, #667eea, #764ba2);
            width: 80px;
            height: 80px;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
            animation: pulse 2s ease-in-out infinite;
        }

        @@keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .logo-container i {
            font-size: 2.5rem;
            color: white;
        }

        .login-title {
            font-size: 2rem;
            font-weight: 600;
            color: var(--text-primary-light);
            margin-bottom: 0.5rem;
            transition: color 0.3s ease;
        }

        body.dark-mode .login-title {
            color: var(--text-primary-dark);
        }

        .login-subtitle {
            color: var(--text-secondary-light);
            font-size: 1rem;
            font-weight: 400;
            transition: color 0.3s ease;
        }

        body.dark-mode .login-subtitle {
            color: var(--text-secondary-dark);
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        .form-label {
            font-weight: 500;
            color: var(--text-primary-light);
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            transition: color 0.3s ease;
        }

        body.dark-mode .form-label {
            color: var(--text-primary-dark);
        }

        .form-control-modern {
            background: var(--input-bg-light);
            border: 2px solid var(--input-border-light);
            border-radius: 15px;
            padding: 1rem 1rem 1rem 3rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            width: 100%;
            color: var(--text-primary-light);
        }

        body.dark-mode .form-control-modern {
            background: var(--input-bg-dark);
            border-color: var(--input-border-dark);
            color: var(--text-primary-dark);
        }

        .form-control-modern::placeholder {
            color: var(--text-secondary-light);
            transition: color 0.3s ease;
        }

        body.dark-mode .form-control-modern::placeholder {
            color: var(--text-secondary-dark);
        }

        .form-control-modern:focus {
            outline: none;
            border-color: #667eea;
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        body.dark-mode .form-control-modern:focus {
            background: rgba(60, 60, 80, 0.9);
            border-color: #667eea;
        }

        .input-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary-light);
            font-size: 1.1rem;
            transition: color 0.3s ease;
        }

        body.dark-mode .input-icon {
            color: var(--text-secondary-dark);
        }

        .form-control-modern:focus + .input-icon {
            color: #667eea;
        }

        .btn-login {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border: none;
            border-radius: 15px;
            padding: 1rem 2rem;
            font-weight: 600;
            font-size: 1rem;
            color: white;
            width: 100%;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-login::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .btn-login:hover::before {
            left: 100%;
        }

        .btn-login:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
        }

        .btn-login:active {
            transform: translateY(-1px);
        }

        .login-divider {
            text-align: center;
            margin: 2rem 0;
            position: relative;
        }

        .login-divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, var(--divider-light), transparent);
            transition: all 0.3s ease;
        }

        body.dark-mode .login-divider::before {
            background: linear-gradient(90deg, transparent, var(--divider-dark), transparent);
        }

        .login-divider span {
            background: var(--container-bg-light);
            padding: 0 1rem;
            color: var(--text-secondary-light);
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        body.dark-mode .login-divider span {
            background: var(--container-bg-dark);
            color: var(--text-secondary-dark);
        }

        .login-divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, var(--divider-light), transparent);
            transition: all 0.3s ease;
        }

        body.dark-mode .login-divider::before {
            background: linear-gradient(90deg, transparent, var(--divider-dark), transparent);
        }

        .register-link {
            text-align: center;
            margin-top: 1.5rem;
        }

        .register-link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .register-link a:hover {
            color: #5a6fd8;
            text-decoration: underline;
        }

        .back-link {
            color: var(--text-secondary-light);
            font-size: 0.9rem;
            transition: color 0.3s ease;
        }

        body.dark-mode .back-link {
            color: var(--text-secondary-dark);
        }

        .back-link:hover {
            color: #667eea;
            text-decoration: none;
        }

        .alert-modern {
            background: rgba(220, 53, 69, 0.1);
            border: 1px solid rgba(220, 53, 69, 0.2);
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            color: #dc3545;
            font-size: 0.9rem;
        }

        .floating-shapes {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1;
        }

        .shape {
            position: absolute;
            background: var(--pattern-light);
            border-radius: 50%;
            animation: float-shapes 15s ease-in-out infinite;
            transition: background 0.3s ease;
        }

        body.dark-mode .shape {
            background: var(--pattern-dark);
        }

        .shape:nth-child(1) {
            width: 100px;
            height: 100px;
            top: 20%;
            left: 10%;
            animation-delay: 0s;
        }

        .shape:nth-child(2) {
            width: 60px;
            height: 60px;
            top: 60%;
            right: 15%;
            animation-delay: -5s;
        }

        .shape:nth-child(3) {
            width: 80px;
            height: 80px;
            bottom: 30%;
            left: 20%;
            animation-delay: -10s;
        }

        @@keyframes float-shapes {
            0%, 100% {
                transform: translateY(0px) rotate(0deg);
                opacity: 0.3;
            }
            50% {
                transform: translateY(-30px) rotate(180deg);
                opacity: 0.8;
            }
        }

        /* Responsive Design */
        @@media (max-width: 576px) {
            .login-container {
                margin: 1rem;
                padding: 2rem 1.5rem;
            }
            
            .login-title {
                font-size: 1.5rem;
            }
        }

        /* Loading animation for button */
        .btn-login.loading {
            pointer-events: none;
        }

        .btn-login.loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            top: 50%;
            left: 50%;
            margin-left: -10px;
            margin-top: -10px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <!-- Floating shapes for decoration -->
    <div class="floating-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>

    <!-- Theme Toggle Button -->
    <div class="theme-toggle" id="themeToggle" title="Toggle Dark/Light Mode">
        <i class="bi bi-sun-fill sun-icon"></i>
        <i class="bi bi-moon-fill moon-icon"></i>
    </div>

    <div class="login-container">
        <div class="login-header">
            <div class="logo-container">
                <i class="bi bi-gear-wide-connected"></i>
            </div>
            <h1 class="login-title">Welcome Back</h1>
            <p class="login-subtitle">Sign in to your Predictive Maintenance account</p>
        </div>

        <!-- Display validation errors -->
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert-modern">
                <i class="bi bi-exclamation-triangle me-2"></i>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <div>@error.ErrorMessage</div>
                }
            </div>
        }

        <!-- Display success messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle me-2"></i>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Display info messages -->
        @if (TempData["InfoMessage"] != null)
        {
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <i class="bi bi-info-circle me-2"></i>
                @TempData["InfoMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Display warning messages -->
        @if (TempData["WarningMessage"] != null)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>
                @TempData["WarningMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Display error messages -->
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-x-circle me-2"></i>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Resend email verification section -->
        @if (ViewBag.ShowResendVerification == true && ViewBag.Email != null)
        {
            <div class="alert alert-warning d-flex align-items-center justify-content-between" role="alert">
                <div>
                    <i class="bi bi-envelope-exclamation me-2"></i>
                    Email verification required. Didn't receive the email?
                </div>
                <a asp-action="ResendVerification" asp-route-email="@ViewBag.Email" 
                   class="btn btn-outline-warning btn-sm">
                    <i class="bi bi-send me-1"></i>Resend Email
                </a>
            </div>
            
            <!-- Development bypass option -->
            @if (Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") == "Development")
            {
                <div class="alert alert-info d-flex align-items-center justify-content-between" role="alert">
                    <div>
                        <i class="bi bi-code-slash me-2"></i>
                        <strong>Development Mode:</strong> Bypass email verification
                    </div>
                    <a asp-action="BypassEmailVerification" asp-route-email="@ViewBag.Email" 
                       class="btn btn-outline-info btn-sm">
                        <i class="bi bi-shield-check me-1"></i>Bypass Verification
                    </a>
                </div>
            }
        }

        <form asp-action="Login" method="post" id="loginForm">
            @Html.AntiForgeryToken()
            
            <div class="form-group">
                <label for="username" class="form-label">Username or Email</label>
                <div class="position-relative">
                    <input type="text" 
                           name="username" 
                           id="username" 
                           class="form-control-modern" 
                           placeholder="Enter your username or email"
                           required 
                           autocomplete="username" />
                    <i class="bi bi-person input-icon"></i>
                </div>
            </div>

            <div class="form-group">
                <label for="password" class="form-label">Password</label>
                <div class="position-relative">
                    <input type="password" 
                           name="password" 
                           id="password" 
                           class="form-control-modern" 
                           placeholder="Enter your password"
                           required 
                           autocomplete="current-password" />
                    <i class="bi bi-lock input-icon"></i>
                </div>
            </div>

            <button type="submit" class="btn-login" id="loginBtn">
                <i class="bi bi-box-arrow-in-right me-2"></i>
                Sign In
            </button>
        </form>

        @* Development Login Button *@
        @if (Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") == "Development")
        {
            <div class="mt-3">
                <form asp-action="DevLogin" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="username" id="devUsername" />
                    <input type="hidden" name="password" id="devPassword" />
                    <button type="button" class="btn btn-warning btn-sm w-100" onclick="performDevLogin()">
                        <i class="bi bi-tools me-1"></i>Development Login (Skip Verification)
                    </button>
                </form>
            </div>
        }

        <div class="login-divider">
            <span>New to the platform?</span>
        </div>

        <div class="register-link">
            <p class="mb-0">Don't have an account? <a asp-action="Create">Create an account</a></p>
            <p class="mt-2 mb-0">
                <a asp-controller="Landing" asp-action="Index" class="back-link">
                    <i class="bi bi-arrow-left me-1"></i>Back to Home
                </a>
            </p>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Theme Toggle Functionality
        const themeToggle = document.getElementById('themeToggle');
        const body = document.body;
        
        // Check for saved theme preference or default to light mode
        const currentTheme = localStorage.getItem('theme');
        if (currentTheme) {
            body.classList.add(currentTheme);
        }
        
        // Theme toggle event listener
        themeToggle.addEventListener('click', function() {
            body.classList.toggle('dark-mode');
            
            // Save theme preference
            if (body.classList.contains('dark-mode')) {
                localStorage.setItem('theme', 'dark-mode');
            } else {
                localStorage.setItem('theme', '');
            }
            
            // Add a subtle bounce animation to the toggle button
            this.style.transform = 'scale(0.9)';
            setTimeout(() => {
                this.style.transform = 'scale(1.1)';
                setTimeout(() => {
                    this.style.transform = 'scale(1)';
                }, 100);
            }, 100);
        });

        // Add loading animation on form submit
        document.getElementById('loginForm').addEventListener('submit', function() {
            const btn = document.getElementById('loginBtn');
            btn.classList.add('loading');
            btn.innerHTML = '<span style="opacity: 0;">Signing In...</span>';
        });

        // Add focus effects for better UX
        document.querySelectorAll('.form-control-modern').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'scale(1.02)';
            });
            
            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'scale(1)';
            });
        });

        // Auto-focus on username field
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('username').focus();
        });

        // Keyboard shortcut for theme toggle (Ctrl/Cmd + Shift + T)
        document.addEventListener('keydown', function(e) {
            if ((e.ctrlKey || e.metaKey) && e.shiftKey && e.key === 'T') {
                e.preventDefault();
                themeToggle.click();
            }
        });

        // Add hover effect for theme toggle
        themeToggle.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.1) rotate(10deg)';
        });

        themeToggle.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1) rotate(0deg)';
        });

        // Development login function
        function performDevLogin() {
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            
            if (!username || !password) {
                alert('Please enter both username and password first');
                return;
            }
            
            // Copy values to hidden form
            document.getElementById('devUsername').value = username;
            document.getElementById('devPassword').value = password;
            
            // Submit the development login form
            document.querySelector('form[action*="DevLogin"]').submit();
        }
    </script>
</body>
</html>
