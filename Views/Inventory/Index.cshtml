@model IEnumerable<FEENALOoFINALE.Models.InventoryItem>

@{
    ViewData["Title"] = "Inventory Management";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                    <li class="breadcrumb-item active">Inventory Management</li>
                </ol>
            </nav>
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0">Inventory Management</h1>
                    <p class="text-muted mb-0">Monitor and manage inventory items, stock levels, and reorder points</p>
                </div>
                <div>
                    <a href="@Url.Action("Create")" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Add New Item
                    </a>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="bi bi-download"></i> Export
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#"><i class="bi bi-filetype-csv"></i> Export as CSV</a></li>
                            <li><a class="dropdown-item" href="#"><i class="bi bi-filetype-xlsx"></i> Export as Excel</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Messages -->
    @if (ViewBag.FilterMessage != null)
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            <i class="bi bi-funnel"></i> @ViewBag.FilterMessage
            <a asp-action="Index" class="btn btn-outline-primary btn-sm ms-3">
                <i class="bi bi-x"></i> Clear Filter
            </a>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="card-title mb-0">Total Items</h6>
                            <h4 class="mb-0">@Model.Count()</h4>
                        </div>
                        <div class="ms-3">
                            <i class="bi bi-box-seam fs-2"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-dark">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="card-title mb-0">Low Stock</h6>
                            <h4 class="mb-0">@Model.Count(i => (i.InventoryStocks?.Sum(s => s.Quantity) ?? 0) < i.MinimumStockLevel)</h4>
                        </div>
                        <div class="ms-3">
                            <i class="bi bi-exclamation-triangle fs-2"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="card-title mb-0">Out of Stock</h6>
                            <h4 class="mb-0">@Model.Count(i => (i.InventoryStocks?.Sum(s => s.Quantity) ?? 0) == 0)</h4>
                        </div>
                        <div class="ms-3">
                            <i class="bi bi-x-circle fs-2"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h6 class="card-title mb-0">Well Stocked</h6>
                            <h4 class="mb-0">@Model.Count(i => (i.InventoryStocks?.Sum(s => s.Quantity) ?? 0) >= i.MinimumStockLevel)</h4>
                        </div>
                        <div class="ms-3">
                            <i class="bi bi-check-circle fs-2"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="card mb-4">
        <div class="card-header">
            <h6 class="card-title mb-0">Filter & Search</h6>
        </div>
        <div class="card-body">
            <form method="get" action="@Url.Action("Index")">
                <div class="row">
                    <div class="col-md-3">
                        <label class="form-label">Search</label>
                        <input type="text" name="search" class="form-control" placeholder="Search by name or description..." value="@ViewBag.SearchTerm">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Category</label>
                        <select name="category" class="form-select">
                            <option value="">All Categories</option>
                            <option value="Electrical">Electrical</option>
                            <option value="Mechanical">Mechanical</option>
                            <option value="Consumable">Consumable</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Stock Status</label>
                        <select name="stockStatus" class="form-select">
                            <option value="">All Items</option>
                            <option value="outOfStock">Out of Stock</option>
                            <option value="lowStock">Low Stock</option>
                            <option value="wellStocked">Well Stocked</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Actions</label>
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-outline-primary">
                                <i class="bi bi-search"></i> Filter
                            </button>
                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                <i class="bi bi-x"></i> Clear
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Inventory Table -->
    <div class="card">
        <div class="card-header">
            <h6 class="card-title mb-0">Inventory Items</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th>
                                <input type="checkbox" id="selectAll" class="form-check-input">
                            </th>
                            <th>Item Name</th>
                            <th>Description</th>
                            <th>Category</th>
                            <th>Current Stock</th>
                            <th>Min Level</th>
                            <th>Max Level</th>
                            <th>Reorder Point</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            var currentStock = item.InventoryStocks?.Sum(s => s.Quantity) ?? 0;
                            string stockStatus;
                            string statusClass;
                            string statusIcon;
                            
                            if (currentStock == 0)
                            {
                                stockStatus = "Out of Stock";
                                statusClass = "bg-danger";
                                statusIcon = "bi-x-circle";
                            }
                            else if (currentStock < item.MinimumStockLevel)
                            {
                                stockStatus = "Low Stock";
                                statusClass = "bg-warning text-dark";
                                statusIcon = "bi-exclamation-triangle";
                            }
                            else if (currentStock <= item.ReorderPoint)
                            {
                                stockStatus = "Reorder Soon";
                                statusClass = "bg-info";
                                statusIcon = "bi-info-circle";
                            }
                            else
                            {
                                stockStatus = "Well Stocked";
                                statusClass = "bg-success";
                                statusIcon = "bi-check-circle";
                            }
                            
                            <tr>
                                <td>
                                    <input type="checkbox" class="form-check-input item-checkbox" value="@item.ItemId">
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div>
                                            <strong>@item.Name</strong>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <small class="text-muted">@(item.Description ?? "No description")</small>
                                </td>
                                <td>
                                    <span class="badge bg-light text-dark">
                                        <i class="bi bi-tag"></i> @item.Category
                                    </span>
                                </td>
                                <td>
                                    <strong class="@(currentStock < item.MinimumStockLevel ? "text-danger" : "")">
                                        @currentStock
                                    </strong>
                                </td>
                                <td>@item.MinimumStockLevel</td>
                                <td>@item.MaxStockLevel</td>
                                <td>@item.ReorderPoint</td>
                                <td>
                                    <span class="badge @statusClass">
                                        <i class="@statusIcon"></i> @stockStatus
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <a asp-action="Details" asp-route-id="@item.ItemId" class="btn btn-outline-info btn-sm" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.ItemId" class="btn btn-outline-warning btn-sm" title="Edit Item">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="AddStock" asp-route-id="@item.ItemId" class="btn btn-outline-success btn-sm" title="Add Stock">
                                            <i class="bi bi-plus-circle"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.ItemId" class="btn btn-outline-danger btn-sm" title="Delete Item" onclick="return confirm('Are you sure you want to delete this item?')">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Bulk Actions -->
    <div class="card mt-4">
        <div class="card-body">
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <strong id="selectedCount">0</strong> items selected
                </div>
                <div class="btn-group" id="bulkActions" style="display: none;">
                    <button type="button" class="btn btn-outline-success" onclick="bulkAddStock()">
                        <i class="bi bi-plus-circle"></i> Add Stock to Selected
                    </button>
                    <button type="button" class="btn btn-outline-warning" onclick="bulkSetReorderPoint()">
                        <i class="bi bi-arrow-repeat"></i> Set Reorder Point
                    </button>
                    <button type="button" class="btn btn-outline-danger" onclick="bulkDelete()">
                        <i class="bi bi-trash"></i> Delete Selected
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Bulk selection functionality
        document.getElementById('selectAll').addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.item-checkbox');
            checkboxes.forEach(cb => cb.checked = this.checked);
            updateBulkActions();
        });

        document.querySelectorAll('.item-checkbox').forEach(cb => {
            cb.addEventListener('change', updateBulkActions);
        });

        function updateBulkActions() {
            const checkedBoxes = document.querySelectorAll('.item-checkbox:checked');
            const count = checkedBoxes.length;
            document.getElementById('selectedCount').textContent = count;
            document.getElementById('bulkActions').style.display = count > 0 ? 'block' : 'none';
        }

        function bulkAddStock() {
            const selected = Array.from(document.querySelectorAll('.item-checkbox:checked')).map(cb => cb.value);
            if (selected.length === 0) return;
            
            const quantity = prompt('Enter quantity to add to selected items:');
            if (quantity && !isNaN(quantity) && parseInt(quantity) > 0) {
                // TODO: Implement bulk add stock functionality
                alert(`Would add ${quantity} to ${selected.length} items: ${selected.join(', ')}`);
            }
        }

        function bulkSetReorderPoint() {
            const selected = Array.from(document.querySelectorAll('.item-checkbox:checked')).map(cb => cb.value);
            if (selected.length === 0) return;
            
            const reorderPoint = prompt('Enter new reorder point for selected items:');
            if (reorderPoint && !isNaN(reorderPoint) && parseInt(reorderPoint) >= 0) {
                // TODO: Implement bulk set reorder point functionality
                alert(`Would set reorder point to ${reorderPoint} for ${selected.length} items: ${selected.join(', ')}`);
            }
        }

        function bulkDelete() {
            const selected = Array.from(document.querySelectorAll('.item-checkbox:checked')).map(cb => cb.value);
            if (selected.length === 0) return;
            
            if (confirm(`Are you sure you want to delete ${selected.length} selected items? This action cannot be undone.`)) {
                // TODO: Implement bulk delete functionality
                alert(`Would delete ${selected.length} items: ${selected.join(', ')}`);
            }
        }
    </script>
}