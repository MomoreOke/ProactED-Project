@model List<FEENALOoFINALE.Services.EnhancedPredictionResult>
@{
    ViewData["Title"] = "Intelligent Maintenance Dashboard";
    var batchResults = ViewBag.BatchResults as FEENALOoFINALE.Services.BatchEnhancedPredictionResult;
    var scheduledTasks = ViewBag.ScheduledTasks as List<FEENALOoFINALE.Models.MaintenanceTask>;
}

<div class="container-fluid">
    <!-- Dashboard Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-gradient-primary text-white">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h3 class="mb-1">
                                <i class="fas fa-brain me-2"></i>
                                Intelligent Maintenance Dashboard
                            </h3>
                            <p class="mb-0">AI-driven predictive maintenance with automatic scheduling</p>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-light btn-sm" onclick="refreshDashboard()">
                                    <i class="fas fa-sync me-1"></i>Refresh
                                </button>
                                <button type="button" class="btn btn-outline-light btn-sm" onclick="exportReport()">
                                    <i class="fas fa-download me-1"></i>Export
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-primary h-100">
                <div class="card-body text-center">
                    <div class="row align-items-center">
                        <div class="col">
                            <i class="fas fa-server fa-2x text-primary mb-2"></i>
                            <h4 class="mb-0">@ViewBag.TotalEquipment</h4>
                            <p class="text-muted mb-0">Total Equipment</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-danger h-100">
                <div class="card-body text-center">
                    <div class="row align-items-center">
                        <div class="col">
                            <i class="fas fa-exclamation-triangle fa-2x text-danger mb-2"></i>
                            <h4 class="mb-0 text-danger">@(batchResults?.HighRiskCount ?? 0)</h4>
                            <p class="text-muted mb-0">High Risk Equipment</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-success h-100">
                <div class="card-body text-center">
                    <div class="row align-items-center">
                        <div class="col">
                            <i class="fas fa-calendar-check fa-2x text-success mb-2"></i>
                            <h4 class="mb-0 text-success">@(batchResults?.TotalMaintenanceTasksScheduled ?? 0)</h4>
                            <p class="text-muted mb-0">Scheduled Tasks</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-info h-100">
                <div class="card-body text-center">
                    <div class="row align-items-center">
                        <div class="col">
                            <i class="fas fa-percentage fa-2x text-info mb-2"></i>
                            <h4 class="mb-0 text-info">@((batchResults?.AverageFailureProbability * 100 ?? 0).ToString("F1"))%</h4>
                            <p class="text-muted mb-0">Avg. Risk Level</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- High Risk Equipment -->
        <div class="col-lg-8 mb-4">
            <div class="card h-100">
                <div class="card-header bg-danger text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        High Risk Equipment Requiring Immediate Attention
                    </h5>
                    <span class="badge bg-light text-danger">@Model.Count items</span>
                </div>
                <div class="card-body p-0">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Equipment</th>
                                        <th>Location</th>
                                        <th>Risk Level</th>
                                        <th>Probability</th>
                                        <th>Maintenance</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var equipment in Model.Take(10))
                                    {
                                        <tr>
                                            <td>
                                                <strong>@equipment.EquipmentName</strong><br>
                                                <small class="text-muted">ID: @equipment.EquipmentId</small>
                                            </td>
                                            <td>
                                                <small>@equipment.Location</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-@equipment.RiskLevelClass">
                                                    @equipment.RiskLevel
                                                </span>
                                            </td>
                                            <td>
                                                <div class="progress" style="height: 20px;">
                                                    <div class="progress-bar bg-@equipment.RiskLevelClass" 
                                                         role="progressbar" 
                                                         style="width: @((equipment.FailureProbability * 100).ToString("F0"))%">
                                                        @equipment.FailureProbabilityDisplay
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                @if (equipment.MaintenanceScheduled)
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-check me-1"></i>Scheduled
                                                    </span>
                                                    <br><small>@equipment.ScheduledMaintenanceTask.ScheduledDate.ToString("MMM dd")</small>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning">
                                                        <i class="fas fa-clock me-1"></i>Pending
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group-vertical btn-group-sm" role="group">
                                                    <a href="@Url.Action("EnhancedPrediction", new { equipmentId = equipment.EquipmentId })" 
                                                       class="btn btn-outline-primary btn-sm">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    @if (!equipment.MaintenanceScheduled)
                                                    {
                                                        <button class="btn btn-outline-success btn-sm" 
                                                                onclick="scheduleManualMaintenance('@equipment.EquipmentId')">
                                                            <i class="fas fa-wrench"></i>
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <h5>No High-Risk Equipment Detected</h5>
                            <p class="text-muted">All equipment is operating within acceptable risk parameters.</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Upcoming Maintenance Tasks -->
        <div class="col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header bg-success text-white">
                    <h6 class="mb-0">
                        <i class="fas fa-calendar-alt me-2"></i>
                        Upcoming Maintenance Tasks
                    </h6>
                </div>
                <div class="card-body p-0">
                    @if (scheduledTasks?.Any() == true)
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var task in scheduledTasks.Take(8))
                            {
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="ms-2 me-auto">
                                            <div class="fw-bold">
                                                @task.Equipment?.EquipmentType?.EquipmentTypeName
                                            </div>
                                            <small class="text-muted">
                                                ID: @task.EquipmentId | @task.ScheduledDate.ToString("MMM dd, HH:mm")
                                            </small>
                                        </div>
                                        <span class="badge bg-@(task.Priority switch 
                                            { 
                                                FEENALOoFINALE.Models.TaskPriority.Critical => "danger", 
                                                FEENALOoFINALE.Models.TaskPriority.High => "warning", 
                                                FEENALOoFINALE.Models.TaskPriority.Medium => "info", 
                                                _ => "success" 
                                            }) rounded-pill">
                                            @task.Priority
                                        </span>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-calendar-check fa-2x text-muted mb-2"></i>
                            <p class="text-muted mb-0">No scheduled tasks</p>
                        </div>
                    }
                </div>
                <div class="card-footer text-center">
                    <a href="@Url.Action("Index", "MaintenanceLog")" class="btn btn-outline-success btn-sm">
                        <i class="fas fa-list me-1"></i>View All Tasks
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Risk Distribution Chart -->
    @if (batchResults != null)
    {
        <div class="row">
            <div class="col-12 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-chart-pie me-2"></i>
                            Risk Distribution Analysis
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <canvas id="riskDistributionChart" height="100"></canvas>
                            </div>
                            <div class="col-md-4">
                                <h6>Summary Statistics</h6>
                                <div class="list-group list-group-flush">
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <span><span class="badge bg-danger me-2"></span>Critical/High Risk</span>
                                        <span class="badge bg-danger rounded-pill">@batchResults.HighRiskCount</span>
                                    </div>
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <span><span class="badge bg-warning me-2"></span>Medium Risk</span>
                                        <span class="badge bg-warning rounded-pill">@batchResults.MediumRiskCount</span>
                                    </div>
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <span><span class="badge bg-success me-2"></span>Low Risk</span>
                                        <span class="badge bg-success rounded-pill">@batchResults.LowRiskCount</span>
                                    </div>
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <span><strong>Success Rate</strong></span>
                                        <span class="badge bg-primary rounded-pill">@((batchResults.SuccessRate * 100).ToString("F1"))%</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Action Buttons -->
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between">
                <div>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Back to Interpretability
                    </a>
                    <a href="@Url.Action("IntelligentPredictionDemo")" class="btn btn-outline-primary ms-2">
                        <i class="fas fa-play me-2"></i>View Demo
                    </a>
                </div>
                <div>
                    <button class="btn btn-success" onclick="runBatchPrediction()">
                        <i class="fas fa-magic me-2"></i>Run Batch Analysis
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2 mb-0">Analyzing equipment...</p>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Initialize risk distribution chart
    @if (batchResults != null)
    {
        <text>
        const ctx = document.getElementById('riskDistributionChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Critical/High Risk', 'Medium Risk', 'Low Risk'],
                datasets: [{
                    data: [@batchResults.HighRiskCount, @batchResults.MediumRiskCount, @batchResults.LowRiskCount],
                    backgroundColor: [
                        'rgba(220, 53, 69, 0.8)',
                        'rgba(255, 193, 7, 0.8)', 
                        'rgba(25, 135, 84, 0.8)'
                    ],
                    borderColor: [
                        'rgba(220, 53, 69, 1)',
                        'rgba(255, 193, 7, 1)',
                        'rgba(25, 135, 84, 1)'
                    ],
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((context.parsed * 100) / total).toFixed(1);
                                return context.label + ': ' + context.parsed + ' (' + percentage + '%)';
                            }
                        }
                    }
                }
            }
        });
        </text>
    }

    function refreshDashboard() {
        const refreshBtn = document.querySelector('button[onclick="refreshDashboard()"]');
        const originalHtml = refreshBtn.innerHTML;
        
        refreshBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Refreshing...';
        refreshBtn.disabled = true;
        
        // Reload the page
        setTimeout(() => {
            window.location.reload();
        }, 1000);
    }

    function scheduleManualMaintenance(equipmentId) {
        if (confirm('Schedule maintenance for equipment #' + equipmentId + '?')) {
            $('#loadingModal').modal('show');
            
            // In a real implementation, this would call the scheduling API
            setTimeout(() => {
                $('#loadingModal').modal('hide');
                alert('Maintenance scheduling functionality would be implemented here.');
            }, 2000);
        }
    }

    function runBatchPrediction() {
        if (confirm('Run batch prediction analysis for all equipment? This may take several minutes.')) {
            $('#loadingModal').modal('show');
            
            // In a real implementation, this would trigger the batch prediction
            setTimeout(() => {
                $('#loadingModal').modal('hide');
                refreshDashboard();
            }, 3000);
        }
    }

    function exportReport() {
        // In a real implementation, this would generate and download a report
        alert('Export functionality would be implemented here.');
    }

    // Auto-refresh every 10 minutes
    setTimeout(() => {
        refreshDashboard();
    }, 600000);
</script>
