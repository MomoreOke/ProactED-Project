@using FEENALOoFINALE.Models
@model FEENALOoFINALE.Models.Equipment

@{
    ViewData["Title"] = "Add Equipment";
}

<h1>Add New Equipment</h1>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="EquipmentTypeId" class="control-label">Equipment Type</label>
                <div class="input-group">
                    <select asp-for="EquipmentTypeId" class="form-control select-chevron" asp-items="ViewBag.EquipmentTypeId" id="EquipmentTypeId">
                        <option value="">-- Select Equipment Type --</option>
                    </select>
                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#addEquipmentTypeModal">Add New</button>
                </div>
                <span asp-validation-for="EquipmentTypeId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="EquipmentModelId" class="control-label">Equipment Model</label>
                <div class="input-group">
                    <select asp-for="EquipmentModelId" class="form-control select-chevron" asp-items="ViewBag.EquipmentModelId" id="EquipmentModelId">
                        <option value="">-- Select Equipment Model --</option>
                    </select>
                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#addEquipmentModelModal">Add New</button>
                </div>
                <span asp-validation-for="EquipmentModelId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BuildingId" class="control-label">Building</label>
                <div class="input-group">
                    <select asp-for="BuildingId" class="form-control select-chevron" asp-items="ViewBag.BuildingId" id="BuildingId">
                        <option value="">-- Select Building --</option>
                    </select>
                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#addBuildingModal">Add New</button>
                </div>
                <span asp-validation-for="BuildingId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="RoomId" class="control-label">Room</label>
                <div class="input-group">
                    <select asp-for="RoomId" class="form-control select-chevron" id="RoomId">
                        <option value="">-- Select Room --</option>
                    </select>
                     <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#addRoomModal">Add New</button>
                </div>
                <span asp-validation-for="RoomId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="InstallationDate" class="control-label">Installation Date</label>
                <input asp-for="InstallationDate" class="form-control" type="date" />
                <span asp-validation-for="InstallationDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ExpectedLifespanMonths" class="control-label">Expected Lifespan in Months</label>
                <input asp-for="ExpectedLifespanMonths" class="form-control" />
                <span asp-validation-for="ExpectedLifespanMonths" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<FEENALOoFINALE.Models.EquipmentStatus>()"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <textarea asp-for="Notes" class="form-control"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

<!-- Modals -->
<div class="modal fade" id="addEquipmentTypeModal" tabindex="-1" aria-labelledby="addEquipmentTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEquipmentTypeModalLabel">Add New Equipment Type</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newEquipmentTypeName" class="form-label">Equipment Type Name</label>
                    <input type="text" class="form-control" id="newEquipmentTypeName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNew">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addEquipmentModelModal" tabindex="-1" aria-labelledby="addEquipmentModelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEquipmentModelModalLabel">Add New Equipment Model</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newEquipmentModelName" class="form-label">Equipment Model Name</label>
                    <input type="text" class="form-control" id="newEquipmentModelName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNew">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addBuildingModal" tabindex="-1" aria-labelledby="addBuildingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBuildingModalLabel">Add New Building</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newBuildingName" class="form-label">Building Name</label>
                    <input type="text" class="form-control" id="newBuildingName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNew">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addRoomModal" tabindex="-1" aria-labelledby="addRoomModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addRoomModalLabel">Add New Room</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newRoomName" class="form-label">Room Name</label>
                    <input type="text" class="form-control" id="newRoomName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNew">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            // Function to refresh select list options
            function refreshSelectList(selectElement, url, valueField, textField, selectedValue) {
                $.get(url, function (data) {
                    selectElement.empty().append('<option value="">-- Select --</option>');
                    $.each(data, function (i, item) {
                        selectElement.append($('<option>', {
                            value: item[valueField],
                            text: item[textField],
                            selected: item[valueField] == selectedValue
                        }));
                    });
                });
            }

            // Generic function to handle adding new items
            function addNewItem(modalId, inputId, actionUrl, selectElementId, valueField, textField) {
                $(modalId + ' #saveNew').click(function () {
                    var name = $(modalId + ' ' + inputId).val();
                    $.post(actionUrl, { name: name }, function (data) {
                        if (data.success) {
                            $(modalId).modal('hide');
                            $(modalId + ' ' + inputId).val('');
                            refreshSelectList($(selectElementId), $(selectElementId).data('url'), valueField, textField, data.newId);
                        } else {
                            alert('Error adding item.');
                        }
                    });
                });
            }

            // Initialize the generic function for each type
            addNewItem('#addEquipmentTypeModal', '#newEquipmentTypeName', '@Url.Action("AddEquipmentType", "Equipment")', '#EquipmentTypeId', 'equipmentTypeId', 'equipmentTypeName');
            addNewItem('#addEquipmentModelModal', '#newEquipmentModelName', '@Url.Action("AddEquipmentModel", "Equipment")', '#EquipmentModelId', 'equipmentModelId', 'modelName');
            addNewItem('#addBuildingModal', '#newBuildingName', '@Url.Action("AddBuilding", "Equipment")', '#BuildingId', 'buildingId', 'buildingName');
            addNewItem('#addRoomModal', '#newRoomName', '@Url.Action("AddRoom", "Equipment")', '#RoomId', 'roomId', 'roomName');

            // Initial Load - Load Equipment Models based on selected Equipment Type
            function loadEquipmentModels(equipmentTypeId, selectedValue) {
                var url = '@Url.Action("GetEquipmentModels", "Equipment")';
                if (equipmentTypeId) {
                    url += '?equipmentTypeId=' + equipmentTypeId;
                }
                refreshSelectList($('#EquipmentModelId'), url, 'equipmentModelId', 'modelName', selectedValue);
            }

            // Initial Load - Load Rooms based on selected Building
            function loadRooms(buildingId, selectedValue) {
                var url = '@Url.Action("GetRoomsByBuilding", "Equipment")';
                var $roomSelect = $('#RoomId');
                $roomSelect.empty();
                $roomSelect.append('<option value="">-- Select Room --</option>');
                if (buildingId) {
                    url += '?buildingId=' + buildingId;
                    $.get(url, function (data) {
                        $.each(data, function (i, item) {
                            $roomSelect.append($('<option>', {
                                value: item.roomId,
                                text: item.roomName,
                                selected: item.roomId == selectedValue
                            }));
                        });
                    });
                }
            }

            // Load Equipment Models and Rooms on page load based on selected values
            var initialEquipmentTypeId = $('#EquipmentTypeId').val();
            loadEquipmentModels(initialEquipmentTypeId);

            var initialBuildingId = $('#BuildingId').val();
            loadRooms(initialBuildingId);

            // Load Buildings on page load
            refreshSelectList($('#BuildingId'), '@Url.Action("GetBuildings", "Equipment")', 'buildingId', 'buildingName');

            // When Equipment Type changes, update Equipment Models
            $('#EquipmentTypeId').change(function () {
                var equipmentTypeId = $(this).val();
                loadEquipmentModels(equipmentTypeId);
            });

            // When Building changes, update Rooms
            $('#BuildingId').change(function () {
                var buildingId = $(this).val();
                loadRooms(buildingId);
            });
        });
    </script>
}