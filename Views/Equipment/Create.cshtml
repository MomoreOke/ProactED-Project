@using FEENALOoFINALE.Models
@model FEENALOoFINALE.Models.Equipment

@{
    ViewData["Title"] = "Add Equipment";
}

<h1>Add New Equipment</h1>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="EquipmentTypeId" class="control-label">Equipment Type</label>
                <select asp-for="EquipmentTypeId" class="form-control select-chevron" asp-items="ViewBag.EquipmentTypeId">
                    <option value="">-- Select Equipment Type --</option>
                </select>
                <span asp-validation-for="EquipmentTypeId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="EquipmentModelName" class="control-label">Equipment Model</label>
                <input asp-for="EquipmentModelName" class="form-control" placeholder="Enter equipment model (e.g., XP-2000, Model ABC-123)" />
                <small class="form-text text-muted">Type the exact model name/number. If this model doesn't exist, it will be created automatically.</small>
                <span asp-validation-for="EquipmentModelName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BuildingId" class="control-label">Building</label>
                <select asp-for="BuildingId" class="form-control select-chevron" asp-items="ViewBag.BuildingId">
                    <option value="">-- Select Building --</option>
                </select>
                <span asp-validation-for="BuildingId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="RoomId" class="control-label">Room</label>
                <select asp-for="RoomId" class="form-control select-chevron" asp-items="ViewBag.RoomId">
                    <option value="">-- Select Room --</option>
                </select>
                <span asp-validation-for="RoomId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="InstallationDate" class="control-label">Installation Date</label>
                <input asp-for="InstallationDate" class="form-control" type="date" />
                <span asp-validation-for="InstallationDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ExpectedLifespanMonths" class="control-label">Expected Lifespan in Months</label>
                <input asp-for="ExpectedLifespanMonths" class="form-control" />
                <span asp-validation-for="ExpectedLifespanMonths" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<FEENALOoFINALE.Models.EquipmentStatus>()"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <textarea asp-for="Notes" class="form-control"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

<!-- Modals -->
<div class="modal fade" id="addEquipmentTypeModal" tabindex="-1" aria-labelledby="addEquipmentTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEquipmentTypeModalLabel">Add New Equipment Type</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newEquipmentTypeName" class="form-label">Equipment Type Name</label>
                    <input type="text" class="form-control" id="newEquipmentTypeName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNewEquipmentType">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addEquipmentModelModal" tabindex="-1" aria-labelledby="addEquipmentModelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEquipmentModelModalLabel">Add New Equipment Model</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newEquipmentModelName" class="form-label">Equipment Model Name</label>
                    <input type="text" class="form-control" id="newEquipmentModelName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNewEquipmentModel">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addBuildingModal" tabindex="-1" aria-labelledby="addBuildingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBuildingModalLabel">Add New Building</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newBuildingName" class="form-label">Building Name</label>
                    <input type="text" class="form-control" id="newBuildingName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNewBuilding">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addRoomModal" tabindex="-1" aria-labelledby="addRoomModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addRoomModalLabel">Add New Room</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newRoomName" class="form-label">Room Name</label>
                    <input type="text" class="form-control" id="newRoomName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNewRoom">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            // Function to refresh select list options
            function refreshSelectList(selectElement, url, valueField, textField, selectedValue) {
                $.get(url, function (data) {
                    selectElement.empty().append('<option value="">-- Select --</option>');
                    $.each(data, function (i, item) {
                        selectElement.append($('<option>', {
                            value: item[valueField],
                            text: item[textField],
                            selected: item[valueField] == selectedValue
                        }));
                    });
                });
            }

            // Equipment Type
            $('#saveNewEquipmentType').click(function () {
                var name = $('#newEquipmentTypeName').val();
                $.post('@Url.Action("AddEquipmentType", "Equipment")', { name: name }, function (data) {
                    if (data.success) {
                        $('#addEquipmentTypeModal').modal('hide');
                        $('#newEquipmentTypeName').val('');
                        refreshSelectList($('#EquipmentTypeId'), '@Url.Action("GetEquipmentTypes", "Equipment")', 'equipmentTypeId', 'equipmentTypeName', data.newId);
                    } else {
                        alert('Error adding equipment type.');
                    }
                });
            });

            // Equipment Model
            $('#saveNewEquipmentModel').click(function () {
                var name = $('#newEquipmentModelName').val();
                var equipmentTypeId = $('#EquipmentTypeId').val(); // Get selected EquipmentTypeId
                $.post('@Url.Action("AddEquipmentModel", "Equipment")', { equipmentTypeId: equipmentTypeId, name: name }, function (data) {
                    if (data.success) {
                        $('#addEquipmentModelModal').modal('hide');
                        $('#newEquipmentModelName').val('');
                        refreshSelectList($('#EquipmentModelId'), '@Url.Action("GetEquipmentModels", "Equipment")', 'equipmentModelId', 'modelName', data.newId);
                    } else {
                        alert('Error adding equipment model.');
                    }
                });
            });

            // Building
            $('#saveNewBuilding').click(function () {
                var name = $('#newBuildingName').val();
                $.post('@Url.Action("AddBuilding", "Equipment")', { name: name }, function (data) {
                    if (data.success) {
                        $('#addBuildingModal').modal('hide');
                        $('#newBuildingName').val('');
                        refreshSelectList($('#BuildingId'), '@Url.Action("GetBuildings", "Equipment")', 'buildingId', 'buildingName', data.newId);
                    } else {
                        alert('Error adding building.');
                    }
                });
            });

            // Room
            $('#saveNewRoom').click(function () {
                var name = $('#newRoomName').val();
                $.post('@Url.Action("AddRoom", "Equipment")', { name: name }, function (data) {
                    if (data.success) {
                        $('#addRoomModal').modal('hide');
                        $('#newRoomName').val('');
                        refreshSelectList($('#RoomId'), '@Url.Action("GetRooms", "Equipment")', 'roomId', 'roomName', data.newId);
                    } else {
                        alert('Error adding room.');
                    }
                });
            });

            // Initial Load - Load Equipment Models based on selected Equipment Type
            function loadEquipmentModels(equipmentTypeId, selectedValue) {
                var url = '@Url.Action("GetEquipmentModels", "Equipment")';
                if (equipmentTypeId) {
                    url += '?equipmentTypeId=' + equipmentTypeId;
                }
                refreshSelectList($('#EquipmentModelId'), url, 'equipmentModelId', 'modelName', selectedValue);
            }

            // Load Equipment Models on page load based on selected Equipment Type
            var initialEquipmentTypeId = $('#EquipmentTypeId').val();
            loadEquipmentModels(initialEquipmentTypeId);

            // Load Buildings and Rooms on page load
            refreshSelectList($('#BuildingId'), '@Url.Action("GetBuildings", "Equipment")', 'buildingId', 'buildingName');
            refreshSelectList($('#RoomId'), '@Url.Action("GetRooms", "Equipment")', 'roomId', 'roomName');

            $('#EquipmentTypeId').change(function () {
                var equipmentTypeId = $(this).val();
                loadEquipmentModels(equipmentTypeId);
            });

            $('#BuildingId').change(function () {
                var buildingId = $(this).val();
                $('#RoomId').empty();
                $('#RoomId').append('<option value="">-- Select Room --</option>');
                if (buildingId) {
                    $.ajax({
                        url: '@Url.Action("GetRoomsByBuilding", "Equipment")',
                        type: "GET",
                        data: { buildingId: buildingId },
                        success: function (data) {
                            $.each(data, function (index, room) {
                                $('#RoomId').append('<option value="' + room.roomId + '">' + room.roomName + '</option>');
                            });
                        }
                    });
                }
            });
        });
    </script>
}