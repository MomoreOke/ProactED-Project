@model FEENALOoFINALE.Models.ViewModels.EnhancedAssetManagementViewModel
@using FEENALOoFINALE.Models.ViewModels

@{
    ViewData["Title"] = Model.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Enhanced Asset Management View -->
<div class="container-fluid px-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <!-- Breadcrumb -->
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    @foreach (var breadcrumb in Model.Breadcrumbs)
                    {
                        @if (breadcrumb.IsActive)
                        {
                            <li class="breadcrumb-item active" aria-current="page">@breadcrumb.Text</li>
                        }
                        else
                        {
                            <li class="breadcrumb-item">
                                @if(!string.IsNullOrEmpty(breadcrumb.Controller) && !string.IsNullOrEmpty(breadcrumb.Action))
                                {
                                    <a asp-controller="@breadcrumb.Controller" asp-action="@breadcrumb.Action">@breadcrumb.Text</a>
                                }
                                else
                                {
                                    <span>@breadcrumb.Text</span>
                                }
                            </li>
                        }
                    }
                </ol>
            </nav>

            <!-- Page Header -->
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-1 text-gray-800">
                        <i class="bi bi-collection text-primary me-2"></i>
                        @Model.PageTitle
                    </h1>
                    <p class="text-muted mb-0">@Model.PageDescription</p>
                </div>
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-outline-primary btn-sm" id="columnCustomizer">
                        <i class="bi bi-layout-three-columns"></i> Columns
                    </button>
                    <div class="dropdown">
                        <button class="btn btn-outline-success btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <i class="bi bi-download"></i> Export
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var export in Model.ExportOptions)
                            {
                                <li><a class="dropdown-item" href="#" data-export="@export.Id"><i class="@export.Icon me-2"></i>@export.Name</a></li>
                            }
                        </ul>
                    </div>
                    <a href="/Asset/Create" class="btn btn-primary btn-sm">
                        <i class="bi bi-plus-circle"></i> Add Asset
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row g-3 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Total Assets</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Statistics.TotalAssets.ToString("N0")</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-collection text-primary" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Operational Equipment</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Statistics.OperationalEquipment.ToString("N0")</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-gear-fill text-success" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Low Stock Items</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Statistics.LowStockItems.ToString("N0")</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-exclamation-triangle-fill text-warning" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Total Value</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Statistics.TotalAssetValue.ToString("C")</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-currency-dollar text-info" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <div class="row">
                <div class="col-md-6">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="bi bi-funnel me-2"></i>Search & Filter Assets
                    </h6>
                </div>
                <div class="col-md-6 text-end">
                    <button type="button" class="btn btn-sm btn-outline-secondary" id="resetFilters">
                        <i class="bi bi-arrow-clockwise"></i> Reset
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body">
            <form method="get" id="assetFilterForm">
                <div class="row g-3">
                    <!-- Search -->
                    <div class="col-md-4">
                        <label for="search" class="form-label">Search Assets</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" class="form-control" id="search" name="search" 
                                   value="@Model.SearchTerm" placeholder="Search by name, description...">
                        </div>
                    </div>

                    <!-- Asset Type Filter -->
                    <div class="col-md-2">
                        <label for="types" class="form-label">Asset Type</label>
                        <select class="form-select" id="types" name="types" multiple>
                            @foreach (var type in Model.FilterOptions.Types)
                            {
                                <option value="@type.Value" selected="@(Model.FilterOptions.SelectedTypes.Contains(type.Value))">
                                    @type.Text (@type.Count)
                                </option>
                            }
                        </select>
                    </div>

                    <!-- Category Filter -->
                    <div class="col-md-2">
                        <label for="categories" class="form-label">Category</label>
                        <select class="form-select" id="categories" name="categories" multiple>
                            @foreach (var category in Model.FilterOptions.Categories)
                            {
                                <option value="@category.Value" selected="@(Model.FilterOptions.SelectedCategories.Contains(category.Value))">
                                    @category.Text (@category.Count)
                                </option>
                            }
                        </select>
                    </div>

                    <!-- Status Filter -->
                    <div class="col-md-2">
                        <label for="statuses" class="form-label">Status</label>
                        <select class="form-select" id="statuses" name="statuses" multiple>
                            @foreach (var status in Model.FilterOptions.Statuses)
                            {
                                <option value="@status.Value" selected="@(Model.FilterOptions.SelectedStatuses.Contains(status.Value))">
                                    @status.Text (@status.Count)
                                </option>
                            }
                        </select>
                    </div>

                    <!-- Location Filter -->
                    <div class="col-md-2">
                        <label for="locations" class="form-label">Location</label>
                        <select class="form-select" id="locations" name="locations" multiple>
                            @foreach (var location in Model.FilterOptions.Locations)
                            {
                                <option value="@location.Value" selected="@(Model.FilterOptions.SelectedLocations.Contains(location.Value))">
                                    @location.Text (@location.Count)
                                </option>
                            }
                        </select>
                    </div>
                </div>

                <!-- Advanced Filters Row -->
                <div class="row g-3 mt-2">
                    <div class="col-md-12">
                        <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="collapse" data-bs-target="#advancedFilters">
                            <i class="bi bi-sliders"></i> Advanced Filters
                        </button>
                    </div>
                </div>

                <div class="collapse mt-3" id="advancedFilters">
                    <div class="row g-3">
                        <!-- Date Range Filters -->
                        <div class="col-md-3">
                            <label for="installationFrom" class="form-label">Installation From</label>
                            <input type="date" class="form-control" id="installationFrom" name="installationFrom" 
                                   value="@Model.FilterOptions.InstallationDateFrom?.ToString("yyyy-MM-dd")">
                        </div>
                        <div class="col-md-3">
                            <label for="installationTo" class="form-label">Installation To</label>
                            <input type="date" class="form-control" id="installationTo" name="installationTo" 
                                   value="@Model.FilterOptions.InstallationDateTo?.ToString("yyyy-MM-dd")">
                        </div>

                        <!-- Value Range Filters -->
                        <div class="col-md-3">
                            <label for="priceFrom" class="form-label">Value From</label>
                            <input type="number" class="form-control" id="priceFrom" name="priceFrom" 
                                   value="@Model.FilterOptions.PriceFrom" placeholder="0.00" step="0.01">
                        </div>
                        <div class="col-md-3">
                            <label for="priceTo" class="form-label">Value To</label>
                            <input type="number" class="form-control" id="priceTo" name="priceTo" 
                                   value="@Model.FilterOptions.PriceTo" placeholder="0.00" step="0.01">
                        </div>
                    </div>

                    <div class="row g-3 mt-2">
                        <!-- Boolean Filters -->
                        <div class="col-md-12">
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="showLowStock" name="showLowStock" 
                                       value="true" @(Model.FilterOptions.ShowLowStock == true ? "checked" : "")>
                                <label class="form-check-label" for="showLowStock">Show Low Stock Only</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="showCriticalOnly" name="showCriticalOnly" 
                                       value="true" @(Model.FilterOptions.ShowCriticalOnly == true ? "checked" : "")>
                                <label class="form-check-label" for="showCriticalOnly">Show Critical Only</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="showWithAlerts" name="showWithAlerts" 
                                       value="true" @(Model.FilterOptions.ShowWithAlerts == true ? "checked" : "")>
                                <label class="form-check-label" for="showWithAlerts">Show With Alerts Only</label>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Filter Actions -->
                <div class="row mt-3">
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-funnel"></i> Apply Filters
                        </button>
                        <button type="button" class="btn btn-outline-secondary ms-2" id="clearFilters">
                            <i class="bi bi-x-circle"></i> Clear All
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Assets Data Table -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="bi bi-table me-2"></i>Assets (@Model.TotalRecords total)
                    </h6>
                </div>
                <div class="col-md-6">
                    <div class="d-flex justify-content-end align-items-center gap-2">
                        <!-- Bulk Actions -->
                        <div class="dropdown" id="bulkActionsDropdown" style="display: none;">
                            <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="bi bi-check2-square"></i> Bulk Actions
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (var action in Model.AvailableBulkActions)
                                {
                                    <li>
                                        <a class="dropdown-item" href="#" data-action="@action.Id" 
                                           data-confirmation="@action.RequiresConfirmation.ToString().ToLower()"
                                           data-message="@action.ConfirmationMessage">
                                            <i class="@action.Icon me-2 text-@action.Color"></i>@action.Name
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>

                        <!-- Sort Options -->
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="bi bi-sort-down"></i> Sort
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (var sort in Model.SortOptions.AvailableOptions)
                                {
                                    <li><a class="dropdown-item" href="#" data-sort="@sort.Value">@sort.Text</a></li>
                                }
                            </ul>
                        </div>

                        <!-- Page Size -->
                        <select class="form-select form-select-sm" style="width: auto;" id="pageSize" name="pageSize">
                            <option value="10" selected="@(Model.PageSize == 10)">10</option>
                            <option value="25" selected="@(Model.PageSize == 25)">25</option>
                            <option value="50" selected="@(Model.PageSize == 50)">50</option>
                            <option value="100" selected="@(Model.PageSize == 100)">100</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-body p-0">
            @if (Model.Assets.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="assetsTable">
                        <thead class="table-light">
                            <tr>
                                <th width="40">
                                    <input type="checkbox" id="selectAll" class="form-check-input">
                                </th>
                                <th>Asset</th>
                                <th>Type</th>
                                <th>Category</th>
                                <th>Status</th>
                                <th>Location</th>
                                <th class="text-center">Stock/Value</th>
                                <th class="text-center">Alerts</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var asset in Model.Assets)
                            {
                                <tr class="@(asset.HasCriticalAlerts ? "table-danger" : asset.IsLowStock ? "table-warning" : "")">
                                    <td>
                                        <input type="checkbox" class="form-check-input asset-checkbox" value="@asset.Id" data-type="@asset.Type">
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="@asset.StatusIcon me-2 text-@asset.StatusColor"></i>
                                            <div>
                                                <strong>@asset.Name</strong>
                                                @if (!string.IsNullOrEmpty(asset.Description))
                                                {
                                                    <br><small class="text-muted">@asset.Description</small>
                                                }
                                                @if (!string.IsNullOrEmpty(asset.Model) && asset.Model != asset.Name)
                                                {
                                                    <br><small class="text-info">Model: @asset.Model</small>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-@(asset.Type == "Equipment" ? "primary" : "info")">
                                            @asset.Type
                                        </span>
                                    </td>
                                    <td>@asset.Category</td>
                                    <td>
                                        <span class="badge bg-@asset.StatusColor">
                                            @asset.Status
                                        </span>
                                    </td>
                                    <td>
                                        <small class="text-muted">@asset.Location</small>
                                    </td>
                                    <td class="text-center">
                                        @if (asset.Type == "Equipment")
                                        {
                                            @if (asset.PurchasePrice.HasValue)
                                            {
                                                <strong>@asset.PurchasePrice.Value.ToString("C")</strong>
                                            }
                                            else
                                            {
                                                <span class="text-muted">N/A</span>
                                            }
                                        }
                                        else
                                        {
                                            <div>
                                                <strong class="@(asset.IsLowStock ? "text-warning" : asset.IsOutOfStock ? "text-danger" : "text-success")">
                                                    @asset.CurrentStock
                                                </strong>
                                                <br><small class="text-muted">Min: @asset.MinimumStock</small>
                                            </div>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (asset.AlertCount > 0)
                                        {
                                            <span class="badge bg-@(asset.HasCriticalAlerts ? "danger" : "warning")">
                                                @asset.AlertCount
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm">
                                            @if (asset.Type == "Equipment")
                                            {
                                                <a href="/Equipment/Details/@asset.Id" class="btn btn-outline-primary btn-sm" title="View Details">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a href="/Equipment/Edit/@asset.Id" class="btn btn-outline-secondary btn-sm" title="Edit">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                            }
                                            else
                                            {
                                                <a href="/Inventory/Details/@asset.Id" class="btn btn-outline-primary btn-sm" title="View Details">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a href="/Inventory/Edit/@asset.Id" class="btn btn-outline-secondary btn-sm" title="Edit">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                @if (asset.IsLowStock)
                                                {
                                                    <a href="/Inventory/AddStock/@asset.Id" class="btn btn-outline-warning btn-sm" title="Add Stock">
                                                        <i class="bi bi-plus-circle"></i>
                                                    </a>
                                                }
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="card-footer">
                        <nav aria-label="Asset pagination">
                            <ul class="pagination pagination-sm justify-content-center mb-0">
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Enhanced", new { page = 1, pageSize = Model.PageSize, search = Model.SearchTerm })">First</a>
                                </li>
                                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Enhanced", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize, search = Model.SearchTerm })">Previous</a>
                                </li>

                                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                {
                                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Enhanced", new { page = i, pageSize = Model.PageSize, search = Model.SearchTerm })">@i</a>
                                    </li>
                                }

                                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Enhanced", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize, search = Model.SearchTerm })">Next</a>
                                </li>
                                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Enhanced", new { page = Model.TotalPages, pageSize = Model.PageSize, search = Model.SearchTerm })">Last</a>
                                </li>
                            </ul>
                        </nav>
                        <div class="text-center mt-2">
                            <small class="text-muted">
                                Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalRecords) 
                                of @Model.TotalRecords entries
                            </small>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-collection text-muted" style="font-size: 4rem;"></i>
                    <h5 class="mt-3 text-muted">No Assets Found</h5>
                    <p class="text-muted">Try adjusting your search criteria or add your first asset.</p>
                    <a href="/Asset/Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Add Asset
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Notifications -->
@await Html.PartialAsync("_EnhancedNotifications", Model.Notifications)

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize enhanced asset management
            initializeAssetManagement();
        });

        function initializeAssetManagement() {
            // Select all checkbox functionality
            $('#selectAll').change(function() {
                $('.asset-checkbox').prop('checked', this.checked);
                toggleBulkActions();
            });

            // Individual checkbox change
            $('.asset-checkbox').change(function() {
                toggleBulkActions();
                updateSelectAll();
            });

            // Bulk actions
            $('.dropdown-menu a[data-action]').click(function(e) {
                e.preventDefault();
                var action = $(this).data('action');
                var requiresConfirmation = $(this).data('confirmation') === 'true';
                var message = $(this).data('message');
                
                executeBulkAction(action, requiresConfirmation, message);
            });

            // Export functionality
            $('.dropdown-menu a[data-export]').click(function(e) {
                e.preventDefault();
                var format = $(this).data('export');
                exportAssets(format);
            });

            // Sort functionality
            $('.dropdown-menu a[data-sort]').click(function(e) {
                e.preventDefault();
                var sortValue = $(this).data('sort');
                applySorting(sortValue);
            });

            // Page size change
            $('#pageSize').change(function() {
                updatePageSize($(this).val());
            });

            // Reset filters
            $('#resetFilters, #clearFilters').click(function() {
                resetFilters();
            });

            // Auto-submit on filter change
            $('#assetFilterForm select, #assetFilterForm input[type="checkbox"]').change(function() {
                setTimeout(function() {
                    $('#assetFilterForm').submit();
                }, 100);
            });

            // Search with debounce
            let searchTimeout;
            $('#search').on('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    $('#assetFilterForm').submit();
                }, 500);
            });
        }

        function toggleBulkActions() {
            var selectedCount = $('.asset-checkbox:checked').length;
            if (selectedCount > 0) {
                $('#bulkActionsDropdown').show();
            } else {
                $('#bulkActionsDropdown').hide();
            }
        }

        function updateSelectAll() {
            var totalCheckboxes = $('.asset-checkbox').length;
            var checkedCheckboxes = $('.asset-checkbox:checked').length;
            
            $('#selectAll').prop('indeterminate', checkedCheckboxes > 0 && checkedCheckboxes < totalCheckboxes);
            $('#selectAll').prop('checked', checkedCheckboxes === totalCheckboxes);
        }

        function executeBulkAction(action, requiresConfirmation, message) {
            var selectedIds = $('.asset-checkbox:checked').map(function() {
                return $(this).val();
            }).get();

            if (selectedIds.length === 0) {
                alert('Please select assets to perform this action.');
                return;
            }

            if (requiresConfirmation && !confirm(message)) {
                return;
            }

            // Show loading
            var $button = $('.dropdown-menu a[data-action="' + action + '"]');
            var originalText = $button.html();
            $button.html('<i class="bi bi-hourglass-split me-2"></i>Processing...');

            // Execute bulk action
            $.ajax({
                url: '/Asset/BulkAction',
                method: 'POST',
                data: {
                    action: action,
                    assetIds: selectedIds
                },
                success: function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while processing the action.');
                },
                complete: function() {
                    $button.html(originalText);
                }
            });
        }

        function exportAssets(format) {
            var params = new URLSearchParams(window.location.search);
            params.set('export', format);
            window.location.href = '/Asset/Export?' + params.toString();
        }

        function applySorting(sortValue) {
            var params = new URLSearchParams(window.location.search);
            var [field, direction] = sortValue.split('_');
            params.set('sortBy', field);
            params.set('sortDirection', direction);
            params.set('page', '1');
            window.location.href = '/Asset/Enhanced?' + params.toString();
        }

        function updatePageSize(pageSize) {
            var params = new URLSearchParams(window.location.search);
            params.set('pageSize', pageSize);
            params.set('page', '1');
            window.location.href = '/Asset/Enhanced?' + params.toString();
        }

        function resetFilters() {
            window.location.href = '/Asset/Enhanced';
        }
    </script>

    <style>
        .border-left-primary {
            border-left: 0.25rem solid #4e73df !important;
        }
        .border-left-success {
            border-left: 0.25rem solid #1cc88a !important;
        }
        .border-left-warning {
            border-left: 0.25rem solid #f6c23e !important;
        }
        .border-left-info {
            border-left: 0.25rem solid #36b9cc !important;
        }
        .text-xs {
            font-size: .7rem;
        }
        .font-weight-bold {
            font-weight: 700 !important;
        }
        .table-hover tbody tr:hover {
            background-color: rgba(0,0,0,.02);
        }
        .asset-checkbox:checked + td {
            background-color: rgba(78, 115, 223, 0.1);
        }
    </style>
}
