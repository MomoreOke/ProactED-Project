@using FEENALOoFINALE.Models
@model IEnumerable<FEENALOoFINALE.Models.Alert>

@{
    ViewData["Title"] = "Alerts";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <h1>Alerts</h1>
        <p class="text-muted mb-0">
            Total alerts: @Model.Count() | 
            Critical: @Model.Count(a => a.Priority == AlertPriority.High) | 
            Medium: @Model.Count(a => a.Priority == AlertPriority.Medium) | 
            Low: @Model.Count(a => a.Priority == AlertPriority.Low)
        </p>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Equipment</th>
            <th>Priority</th>
            <th>Status</th>
            <th>Created Date</th>
            <th>Assigned To</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var priorityClass = item.Priority == AlertPriority.High ? "text-danger" :
                              item.Priority == AlertPriority.Medium ? "text-warning" : "";
            
            <tr>
                <td>
                    @if (item.Equipment != null)
                    {
                        <span class="text-primary">
                            @(item.Equipment.EquipmentModel?.ModelName ?? item.Equipment.EquipmentType?.EquipmentTypeName ?? "Unknown Equipment")
                        </span>
                    }
                    else
                    {
                        <span class="text-muted">No Equipment</span>
                    }
                </td>
                <td class="@priorityClass">@item.Priority</td>
                <td>
                    @if (item.Status == AlertStatus.InProgress)
                    {
                        <span class="badge bg-warning text-dark">In Progress</span>
                    }
                    else if (item.Status == AlertStatus.Resolved)
                    {
                        <span class="badge bg-success">Resolved</span>
                    }
                    else if (item.Status == AlertStatus.Closed)
                    {
                        <span class="badge bg-secondary">Closed</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Open</span>
                    }
                </td>
                <td>@item.CreatedDate.ToShortDateString()</td>
                <td>
                    @if (item.AssignedTo != null)
                    {
                        <span class="badge bg-info">@item.AssignedTo.FullName</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">Unassigned</span>
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.AlertId" class="btn btn-info btn-sm">
                        <i class="bi bi-eye"></i> Details
                    </a>
                    
                    @if (item.Status != AlertStatus.Resolved && item.Status != AlertStatus.Closed)
                    {
                        <a asp-action="Edit" asp-route-id="@item.AlertId" class="btn btn-warning btn-sm">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        
                        @if (item.Status == AlertStatus.Open)
                        {
                            <a asp-action="MarkInProgress" asp-route-id="@item.AlertId" class="btn btn-primary btn-sm" 
                               title="@(item.AssignedTo == null ? "Assign to me and start working" : "Take over and start working")">
                                <i class="bi bi-play-circle"></i> 
                                @(item.AssignedTo == null ? "Take & Start" : "Take Over")
                            </a>
                        }
                        
                        <a asp-action="Resolve" asp-route-id="@item.AlertId" class="btn btn-success btn-sm"
                           title="@(item.AssignedTo == null ? "Assign to me and schedule maintenance" : "Schedule maintenance")">
                            <i class="bi bi-wrench"></i> 
                            @(item.AssignedTo == null ? "Take & Schedule" : "Schedule Maintenance")
                        </a>
                        
                        @* Check if there's a completed maintenance task *@
                        @if (ViewBag.CompletedMaintenanceTasks != null && ((List<int>)ViewBag.CompletedMaintenanceTasks).Contains(item.AlertId))
                        {
                            <form asp-action="MarkResolved" asp-route-id="@item.AlertId" method="post" class="d-inline">
                                <button type="submit" class="btn btn-outline-success btn-sm" 
                                        onclick="return confirm('Mark this alert as resolved?')"
                                        title="Mark as resolved (maintenance completed)">
                                    <i class="bi bi-check-circle"></i> Mark Resolved
                                </button>
                            </form>
                        }
                    }
                    
                    <a asp-action="Delete" asp-route-id="@item.AlertId" class="btn btn-danger btn-sm" 
                       onclick="return confirm('Are you sure you want to delete this alert?')"
                       title="Delete alert">
                        <i class="bi bi-trash"></i> Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>