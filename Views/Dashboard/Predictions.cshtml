@model FEENALOoFINALE.Models.ViewModels.PredictionsDashboardViewModel
@{
    ViewData["Title"] = Model.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="h3 text-primary">
                        <i class="bi bi-graph-up-arrow me-2"></i>@Model.PageTitle
                    </h2>
                    <p class="text-muted mb-0">AI-powered predictions and maintenance forecasts</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary btn-sm" onclick="refreshPredictions()">
                        <i class="bi bi-arrow-clockwise me-1"></i>Refresh
                    </button>
                    <button class="btn btn-primary btn-sm" onclick="exportPredictions()">
                        <i class="bi bi-download me-1"></i>Export
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Prediction Accuracy Alert -->
    @if (Model.PredictionAccuracy != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="alert alert-info border-0 shadow-sm">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-info-circle-fill me-3 fs-4"></i>
                        <div>
                            <h6 class="alert-heading mb-1">Prediction Model Accuracy</h6>
                            <p class="mb-0">Current model accuracy: <strong>@Math.Round(Model.PredictionAccuracy.Accuracy, 1)%</strong> 
                            (Based on @Model.PredictionAccuracy.SampleSize predictions)</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <!-- Failure Predictions -->
        <div class="col-lg-8 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-exclamation-triangle me-2 text-warning"></i>Failure Predictions
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.FailurePredictions != null && Model.FailurePredictions.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Equipment</th>
                                        <th>Risk Level</th>
                                        <th>Predicted Date</th>
                                        <th>Confidence</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var prediction in Model.FailurePredictions.Take(10))
                                    {
                                        <tr>
                                            <td>
                                                <div>
                                                    <strong>@prediction.EquipmentName</strong>
                                                    <br><small class="text-muted">@prediction.EquipmentType</small>
                                                </div>
                                            </td>
                                            <td>
                                                @{
                                                    var riskBadge = prediction.RiskLevel switch
                                                    {
                                                        "High" => "danger",
                                                        "Medium" => "warning", 
                                                        "Low" => "success",
                                                        _ => "secondary"
                                                    };
                                                }
                                                <span class="badge bg-@riskBadge">@prediction.RiskLevel</span>
                                            </td>
                                            <td>
                                                @if (prediction.PredictedFailureDate.HasValue)
                                                {
                                                    @prediction.PredictedFailureDate.Value.ToString("MMM dd, yyyy")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Unknown</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="progress flex-grow-1 me-2" style="height: 8px;">
                                                        <div class="progress-bar" role="progressbar" 
                                                             style="width: @prediction.Confidence%" 
                                                             aria-valuenow="@prediction.Confidence" 
                                                             aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <small>@Math.Round(prediction.Confidence, 0)%</small>
                                                </div>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-primary" onclick="scheduleMaintenence(@prediction.EquipmentId)">
                                                    <i class="bi bi-calendar-plus"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-5">
                            <i class="bi bi-graph-up-arrow display-1 mb-3"></i>
                            <h5>No Failure Predictions Available</h5>
                            <p>System is analyzing equipment data to generate predictions.</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Risk Assessment Summary -->
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-shield-exclamation me-2 text-danger"></i>Risk Assessment
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.RiskAssessments != null && Model.RiskAssessments.Any())
                    {
                        @foreach (var risk in Model.RiskAssessments.Take(5))
                        {
                            <div class="d-flex justify-content-between align-items-center mb-3 p-3 bg-light rounded">
                                <div>
                                    <h6 class="mb-1">@risk.RiskCategory</h6>
                                    <small class="text-muted">@risk.Description</small>
                                </div>
                                <div class="text-end">
                                    @{
                                        var impactBadge = risk.ImpactLevel switch
                                        {
                                            "Critical" => "danger",
                                            "High" => "warning",
                                            "Medium" => "info",
                                            "Low" => "success",
                                            _ => "secondary"
                                        };
                                    }
                                    <span class="badge bg-@impactBadge">@risk.ImpactLevel</span>
                                    <div><small class="text-muted">@Math.Round(risk.Probability, 0)% likely</small></div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="bi bi-shield-check display-4 mb-3"></i>
                            <p>No risk assessments available</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Maintenance Forecasts -->
        <div class="col-lg-6 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-calendar-week me-2 text-info"></i>Maintenance Forecasts
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.MaintenanceForecasts != null && Model.MaintenanceForecasts.Any())
                    {
                        <div class="timeline">
                            @foreach (var forecast in Model.MaintenanceForecasts.Take(6))
                            {
                                <div class="timeline-item mb-3">
                                    <div class="row">
                                        <div class="col-3 text-center">
                                            <div class="bg-primary text-white rounded p-2">
                                                <div class="fw-bold">@forecast.ScheduledDate.Day</div>
                                                <small>@forecast.ScheduledDate.ToString("MMM")</small>
                                            </div>
                                        </div>
                                        <div class="col-9">
                                            <h6 class="mb-1">@forecast.MaintenanceType</h6>
                                            <p class="text-muted mb-1">@forecast.EquipmentName</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="bi bi-calendar-week display-4 mb-3"></i>
                            <p>No maintenance forecasts available</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Recommended Actions -->
        <div class="col-lg-6 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white border-0">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-lightbulb me-2 text-warning"></i>Recommended Actions
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.RecommendedActions != null && Model.RecommendedActions.Any())
                    {
                        @foreach (var action in Model.RecommendedActions)
                        {
                            <div class="card mb-3 border-start border-4 border-@(action.Priority == "High" ? "danger" : action.Priority == "Medium" ? "warning" : "info")">
                                <div class="card-body p-3">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <h6 class="card-title mb-1">@action.ActionTitle</h6>
                                            <p class="card-text text-muted mb-2">@action.Description</p>
                                            <small class="text-muted">Equipment: @action.EquipmentName</small>
                                        </div>
                                        <div class="text-end">
                                            <span class="badge bg-@(action.Priority == "High" ? "danger" : action.Priority == "Medium" ? "warning" : "info") mb-2">
                                                @action.Priority
                                            </span>
                                            <div>
                                                <button class="btn btn-sm btn-outline-success" onclick="implementAction(@action.RecommendationId)">
                                                    <i class="bi bi-check-lg"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="bi bi-lightbulb display-4 mb-3"></i>
                            <p>No recommendations available</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function refreshPredictions() {
            window.location.reload();
        }

        function exportPredictions() {
            window.print();
        }

        function scheduleMaintenence(equipmentId) {
            // Redirect to maintenance scheduling
            window.location.href = `/Equipment/Details/${equipmentId}`;
        }

        function implementAction(recommendationId) {
            if (confirm('Mark this recommendation as implemented?')) {
                // AJAX call to mark as implemented
                fetch(`/api/recommendations/${recommendationId}/implement`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to update recommendation status');
                });
            }
        }
    </script>
}
