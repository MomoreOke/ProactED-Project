@model FEENALOoFINALE.Models.DashboardViewModel
@using Microsoft.AspNetCore.Identity
@using FEENALOoFINALE.Models
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Dashboard";
    var currentUser = await UserManager.GetUserAsync(User);
}

<style>
    /* Modern Dashboard Styles */
    .dashboard-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }
    
    .dashboard-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        border-radius: 20px;
        margin-bottom: 2rem;
        box-shadow: 0 10px 40px rgba(102, 126, 234, 0.3);
        position: relative;
        overflow: hidden;
    }
    
    .dashboard-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100%" height="100%" fill="url(%23grid)"/></svg>');
        opacity: 0.3;
    }
    
    .dashboard-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0;
        position: relative;
        z-index: 2;
    }
    
    .dashboard-subtitle {
        font-size: 1.1rem;
        opacity: 0.9;
        margin: 0.5rem 0 0 0;
        position: relative;
        z-index: 2;
    }
    
    .user-greeting {
        font-size: 1rem;
        opacity: 0.8;
        margin-top: 1rem;
        position: relative;
        z-index: 2;
    }
    
    .metric-card {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        border: none;
        height: 100%;
        position: relative;
        overflow: hidden;
    }
    
    .metric-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 4px;
        height: 100%;
        transition: all 0.3s ease;
    }
    
    .metric-card.primary::before {
        background: linear-gradient(135deg, #667eea, #764ba2);
    }
    
    .metric-card.success::before {
        background: linear-gradient(135deg, #56ab2f, #a8e6cf);
    }
    
    .metric-card.warning::before {
        background: linear-gradient(135deg, #f093fb, #f5576c);
    }
    
    .metric-card.danger::before {
        background: linear-gradient(135deg, #ff6b6b, #ee5a52);
    }
    
    .metric-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }
    
    .metric-card:hover::before {
        width: 8px;
    }
    
    .metric-icon {
        width: 60px;
        height: 60px;
        border-radius: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        color: white;
        margin-bottom: 1rem;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }
    
    .metric-icon.primary {
        background: linear-gradient(135deg, #667eea, #764ba2);
    }
    
    .metric-icon.success {
        background: linear-gradient(135deg, #56ab2f, #a8e6cf);
    }
    
    .metric-icon.warning {
        background: linear-gradient(135deg, #f093fb, #f5576c);
    }
    
    .metric-icon.danger {
        background: linear-gradient(135deg, #ff6b6b, #ee5a52);
    }
    
    .metric-value {
        font-size: 2.5rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0;
        line-height: 1;
    }
    
    .metric-label {
        font-size: 0.9rem;
        color: #7f8c8d;
        margin: 0.5rem 0 0 0;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .metric-trend {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 0.5rem;
        font-size: 0.8rem;
    }
    
    .trend-up {
        color: #27ae60;
    }
    
    .trend-down {
        color: #e74c3c;
    }
    
    .content-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: none;
        overflow: hidden;
        margin-bottom: 2rem;
    }
    
    .content-card-header {
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        padding: 1.5rem 2rem;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }
    
    .content-card-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }
    
    .content-card-body {
        padding: 2rem;
    }
    
    .table-modern {
        margin: 0;
    }
    
    .table-modern thead th {
        background: transparent;
        border: none;
        font-weight: 600;
        color: #2c3e50;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        padding: 1rem 0.75rem;
    }
    
    .table-modern tbody td {
        border: none;
        padding: 1rem 0.75rem;
        vertical-align: middle;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }
    
    .table-modern tbody tr:hover {
        background: rgba(102, 126, 234, 0.05);
    }
    
    .badge-modern {
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .badge-success-modern {
        background: linear-gradient(135deg, #56ab2f, #a8e6cf);
        color: white;
    }
    
    .badge-warning-modern {
        background: linear-gradient(135deg, #f093fb, #f5576c);
        color: white;
    }
    
    .badge-danger-modern {
        background: linear-gradient(135deg, #ff6b6b, #ee5a52);
        color: white;
    }
    
    .badge-info-modern {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
    }
    
    .action-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        border: none;
        overflow: hidden;
    }
    
    .action-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    }
    
    .action-card-body {
        padding: 1.5rem;
    }
    
    .action-icon {
        width: 50px;
        height: 50px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.25rem;
        color: white;
        margin-bottom: 1rem;
    }
    
    .action-icon.primary {
        background: linear-gradient(135deg, #667eea, #764ba2);
    }
    
    .action-icon.success {
        background: linear-gradient(135deg, #56ab2f, #a8e6cf);
    }
    
    .action-icon.warning {
        background: linear-gradient(135deg, #f093fb, #f5576c);
    }
    
    .action-icon.danger {
        background: linear-gradient(135deg, #ff6b6b, #ee5a52);
    }
    
    .action-title {
        font-size: 1rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0 0 0.5rem 0;
    }
    
    .action-description {
        font-size: 0.85rem;
        color: #7f8c8d;
        margin: 0;
    }
    
    .quick-stats {
        display: flex;
        gap: 1.5rem;
        margin-top: 1rem;
    }
    
    .quick-stat {
        text-align: center;
    }
    
    .quick-stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
        opacity: 0.9;
    }
    
    .quick-stat-label {
        font-size: 0.75rem;
        margin: 0;
        opacity: 0.7;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .activity-item {
        padding: 1rem 0;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        display: flex;
        align-items: center;
        gap: 1rem;
    }
    
    .activity-item:last-child {
        border-bottom: none;
    }
    
    .activity-icon {
        width: 40px;
        height: 40px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1rem;
        color: white;
        flex-shrink: 0;
    }
    
    .activity-icon.success {
        background: linear-gradient(135deg, #56ab2f, #a8e6cf);
    }
    
    .activity-icon.warning {
        background: linear-gradient(135deg, #f093fb, #f5576c);
    }
    
    .activity-icon.danger {
        background: linear-gradient(135deg, #ff6b6b, #ee5a52);
    }
    
    .activity-icon.info {
        background: linear-gradient(135deg, #667eea, #764ba2);
    }
    
    .activity-content {
        flex: 1;
    }
    
    .activity-title {
        font-size: 0.9rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0 0 0.25rem 0;
    }
    
    .activity-description {
        font-size: 0.8rem;
        color: #7f8c8d;
        margin: 0;
    }
    
    .activity-time {
        font-size: 0.75rem;
        color: #95a5a6;
        margin-top: 0.25rem;
    }
</style>

<div class="dashboard-container">
    <div class="container-fluid">
        <!-- Dashboard Header -->
        <div class="dashboard-header">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="dashboard-title">
                        <i class="bi bi-speedometer2 me-3"></i>
                        Dashboard
                    </h1>
                    <p class="dashboard-subtitle">Predictive Maintenance Overview</p>
                    @if (currentUser != null)
                    {
                        <p class="user-greeting">
                            <i class="bi bi-person-circle me-2"></i>
                            Welcome back, @currentUser.FirstName @currentUser.LastName
                        </p>
                    }
                </div>
                <div class="col-md-4 text-md-end">
                    <!-- Export Buttons -->
                    <div class="mb-3">
                        <div class="btn-group" role="group" aria-label="Export Options">
                            <button type="button" class="btn btn-outline-light btn-sm" onclick="exportToExcel()">
                                <i class="bi bi-file-earmark-spreadsheet me-1"></i>
                                Excel
                            </button>
                            <button type="button" class="btn btn-outline-light btn-sm" onclick="exportToPdf()">
                                <i class="bi bi-file-earmark-pdf me-1"></i>
                                PDF
                            </button>
                            <button type="button" class="btn btn-outline-light btn-sm" onclick="refreshDashboard()">
                                <i class="bi bi-arrow-clockwise me-1"></i>
                                Refresh
                            </button>
                        </div>
                    </div>
                    <div class="quick-stats">
                        <div class="quick-stat">
                            <p class="quick-stat-value">@DateTime.Now.ToString("MMM")</p>
                            <p class="quick-stat-label">Month</p>
                        </div>
                        <div class="quick-stat">
                            <p class="quick-stat-value">@DateTime.Now.Day</p>
                            <p class="quick-stat-label">Day</p>
                        </div>
                        <div class="quick-stat">
                            <p class="quick-stat-value">@DateTime.Now.Year</p>
                            <p class="quick-stat-label">Year</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Filter Bar -->
        <div class="row mb-3">
            <div class="col-12">
                <div class="d-flex gap-2 flex-wrap">
                    <span class="text-muted me-3">Quick Filters:</span>
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="applyQuickFilter('critical')">
                        <i class="bi bi-exclamation-triangle me-1"></i>Critical Only
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-info" onclick="applyQuickFilter('today')">
                        <i class="bi bi-calendar-day me-1"></i>Today
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-info" onclick="applyQuickFilter('week')">
                        <i class="bi bi-calendar-week me-1"></i>This Week
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-warning" onclick="applyQuickFilter('inactive')">
                        <i class="bi bi-gear me-1"></i>Inactive Equipment
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="clearFilters()">
                        <i class="bi bi-x-circle me-1"></i>Clear All
                    </button>
                </div>
            </div>
        </div>

        <!-- Metrics Row -->
        <div class="row g-4 mb-4">
            <!-- Total Equipment -->
            <div class="col-xl-2 col-md-4 col-sm-6">
                <div class="metric-card primary">
                    <div class="metric-icon primary">
                        <i class="bi bi-gear-wide-connected"></i>
                    </div>
                    <h3 class="metric-value">@Model.TotalEquipment</h3>
                    <p class="metric-label">Total Equipment</p>
                </div>
            </div>

            <!-- Critical Alerts -->
            <div class="col-xl-2 col-md-4 col-sm-6">
                <div class="metric-card @(Model.CriticalAlerts > 0 ? "danger metric-danger" : "success")">
                    <div class="metric-icon @(Model.CriticalAlerts > 0 ? "danger" : "success")">
                        <i class="bi bi-exclamation-triangle"></i>
                    </div>
                    <h3 class="metric-value">@Model.CriticalAlerts</h3>
                    <p class="metric-label">Critical Alerts</p>
                </div>
            </div>

            <!-- Active Maintenance -->
            <div class="col-xl-2 col-md-4 col-sm-6">
                <div class="metric-card @(Model.ActiveMaintenanceTasks > 0 ? "warning metric-info" : "success")">
                    <div class="metric-icon @(Model.ActiveMaintenanceTasks > 0 ? "warning" : "success")">
                        <i class="bi bi-wrench-adjustable"></i>
                    </div>
                    <h3 class="metric-value">@Model.ActiveMaintenanceTasks</h3>
                    <p class="metric-label">Active Tasks</p>
                </div>
            </div>

            <!-- Completed This Month -->
            <div class="col-xl-2 col-md-4 col-sm-6">
                <div class="metric-card success">
                    <div class="metric-icon success">
                        <i class="bi bi-check-circle"></i>
                    </div>
                    <h3 class="metric-value">@Model.CompletedMaintenanceTasks</h3>
                    <p class="metric-label">Completed</p>
                </div>
            </div>

            <!-- Inventory Items -->
            <div class="col-xl-2 col-md-4 col-sm-6">
                <div class="metric-card primary">
                    <div class="metric-icon primary">
                        <i class="bi bi-box-seam"></i>
                    </div>
                    <h3 class="metric-value">@Model.TotalInventoryItems</h3>
                    <p class="metric-label">Inventory Items</p>
                </div>
            </div>

            <!-- Low Stock Items -->
            <div class="col-xl-2 col-md-4 col-sm-6">
                <div class="metric-card @(Model.LowStockItems > 0 ? "warning" : "success")">
                    <div class="metric-icon @(Model.LowStockItems > 0 ? "warning" : "success")">
                        <i class="bi bi-exclamation-diamond"></i>
                    </div>
                    <h3 class="metric-value">@Model.LowStockItems</h3>
                    <p class="metric-label">Low Stock</p>
                </div>
            </div>
        </div>

        <!-- Charts Row -->
        <div class="row g-4 mb-4">
            <!-- Equipment Status Chart -->
            <div class="col-xl-3 col-lg-6">
                <div class="content-card">
                    <div class="content-card-header">
                        <h6 class="content-card-title">
                            <i class="bi bi-pie-chart text-primary"></i>
                            Equipment Status
                        </h6>
                    </div>
                    <div class="content-card-body text-center">
                        <canvas id="equipmentStatusChart" width="200" height="200"></canvas>
                    </div>
                </div>
            </div>

            <!-- Maintenance Trends Chart -->
            <div class="col-xl-6 col-lg-6">
                <div class="content-card">
                    <div class="content-card-header">
                        <h6 class="content-card-title">
                            <i class="bi bi-graph-up text-success"></i>
                            Maintenance Trends (Last 7 Days)
                        </h6>
                    </div>
                    <div class="content-card-body">
                        <canvas id="maintenanceTrendsChart" width="400" height="200"></canvas>
                    </div>
                </div>
            </div>

            <!-- Alert Priority Chart -->
            <div class="col-xl-3 col-lg-6">
                <div class="content-card">
                    <div class="content-card-header">
                        <h6 class="content-card-title">
                            <i class="bi bi-exclamation-triangle text-warning"></i>
                            Alert Priorities
                        </h6>
                    </div>
                    <div class="content-card-body text-center">
                        <canvas id="alertPriorityChart" width="200" height="200"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Data Tables Row -->
        <div class="row g-4 mb-4">
            <!-- Recent Alerts -->
            <div class="col-xl-6">
                <div class="content-card">
                    <div class="content-card-header">
                        <h6 class="content-card-title">
                            <i class="bi bi-bell text-danger"></i>
                            Recent Alerts
                        </h6>
                    </div>
                    <div class="content-card-body">
                        @if (Model.RecentAlerts != null && Model.RecentAlerts.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-modern">
                                    <thead>
                                        <tr>
                                            <th>Priority</th>
                                            <th>Equipment</th>
                                            <th>Alert Type</th>
                                            <th>Time</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var alert in Model.RecentAlerts.Take(5))
                                        {
                                            <tr>
                                                <td>
                                                    <span class="badge badge-@(alert.Priority.ToString().ToLower())-modern">
                                                        @alert.Priority
                                                    </span>
                                                </td>
                                                <td>@alert.Equipment?.Name</td>
                                                <td>@alert.AlertType</td>
                                                <td>
                                                    <small class="text-muted">
                                                        @alert.CreatedAt.ToString("MMM dd, HH:mm")
                                                    </small>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4 text-muted">
                                <i class="bi bi-check-circle display-4 d-block mb-3 text-success"></i>
                                <p class="mb-0">No recent alerts - System running smoothly!</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Upcoming Maintenance -->
            <div class="col-xl-6">
                <div class="content-card">
                    <div class="content-card-header">
                        <h6 class="content-card-title">
                            <i class="bi bi-calendar-event text-info"></i>
                            Upcoming Maintenance
                        </h6>
                    </div>
                    <div class="content-card-body">
                        @if (Model.UpcomingMaintenanceTasks != null && Model.UpcomingMaintenanceTasks.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-modern">
                                    <thead>
                                        <tr>
                                            <th>Equipment</th>
                                            <th>Task</th>
                                            <th>Priority</th>
                                            <th>Due Date</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var task in Model.UpcomingMaintenanceTasks.Take(5))
                                        {
                                            <tr>
                                                <td>@task.Equipment?.Name</td>
                                                <td>@task.TaskType</td>
                                                <td>
                                                    <span class="badge badge-@(task.Priority.ToString().ToLower())-modern">
                                                        @task.Priority
                                                    </span>
                                                </td>
                                                <td>
                                                    <small class="text-muted">
                                                        @task.ScheduledDate.ToString("MMM dd, yyyy")
                                                    </small>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4 text-muted">
                                <i class="bi bi-calendar-check display-4 d-block mb-3 text-success"></i>
                                <p class="mb-0">No upcoming maintenance scheduled</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Actions Row -->
        <div class="row g-4 mb-4">
            <div class="col-12">
                <div class="content-card">
                    <div class="content-card-header">
                        <h6 class="content-card-title">
                            <i class="bi bi-lightning text-warning"></i>
                            Quick Actions
                        </h6>
                    </div>
                    <div class="content-card-body">
                        <div class="row g-3">
                            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                                <a href="/Equipment" class="text-decoration-none">
                                    <div class="action-card">
                                        <div class="action-card-body text-center">
                                            <div class="action-icon primary">
                                                <i class="bi bi-gear-wide-connected"></i>
                                            </div>
                                            <h6 class="action-title">Manage Equipment</h6>
                                            <p class="action-description">View and manage all equipment</p>
                                        </div>
                                    </div>
                                </a>
                            </div>

                            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                                <a href="/MaintenanceLog/Create" class="text-decoration-none">
                                    <div class="action-card">
                                        <div class="action-card-body text-center">
                                            <div class="action-icon success">
                                                <i class="bi bi-plus-circle"></i>
                                            </div>
                                            <h6 class="action-title">New Maintenance</h6>
                                            <p class="action-description">Schedule maintenance task</p>
                                        </div>
                                    </div>
                                </a>
                            </div>

                            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                                <a href="/Alert" class="text-decoration-none">
                                    <div class="action-card">
                                        <div class="action-card-body text-center">
                                            <div class="action-icon warning">
                                                <i class="bi bi-bell"></i>
                                            </div>
                                            <h6 class="action-title">View Alerts</h6>
                                            <p class="action-description">Check system alerts</p>
                                        </div>
                                    </div>
                                </a>
                            </div>

                            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                                <a href="/Inventory" class="text-decoration-none">
                                    <div class="action-card">
                                        <div class="action-card-body text-center">
                                            <div class="action-icon primary">
                                                <i class="bi bi-box-seam"></i>
                                            </div>
                                            <h6 class="action-title">Inventory</h6>
                                            <p class="action-description">Manage inventory items</p>
                                        </div>
                                    </div>
                                </a>
                            </div>

                            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                                <a href="/Report" class="text-decoration-none">
                                    <div class="action-card">
                                        <div class="action-card-body text-center">
                                            <div class="action-icon danger">
                                                <i class="bi bi-graph-up"></i>
                                            </div>
                                            <h6 class="action-title">Reports</h6>
                                            <p class="action-description">Generate reports</p>
                                        </div>
                                    </div>
                                </a>
                            </div>

                            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                                <a href="/FailurePrediction" class="text-decoration-none">
                                    <div class="action-card">
                                        <div class="action-card-body text-center">
                                            <div class="action-icon warning">
                                                <i class="bi bi-cpu"></i>
                                            </div>
                                            <h6 class="action-title">Predictions</h6>
                                            <p class="action-description">View failure predictions</p>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="row g-4">
            <div class="col-12">
                <div class="content-card">
                    <div class="content-card-header">
                        <h6 class="content-card-title">
                            <i class="bi bi-activity text-info"></i>
                            Recent System Activity
                        </h6>
                    </div>
                    <div class="content-card-body">
                        <div class="activity-feed">
                            <div class="activity-item">
                                <div class="activity-icon success">
                                    <i class="bi bi-check-circle"></i>
                                </div>
                                <div class="activity-content">
                                    <p class="activity-title">Maintenance Completed</p>
                                    <p class="activity-description">Routine maintenance on HVAC Unit A-101 completed successfully</p>
                                    <p class="activity-time">2 hours ago</p>
                                </div>
                            </div>

                            <div class="activity-item">
                                <div class="activity-icon warning">
                                    <i class="bi bi-exclamation-triangle"></i>
                                </div>
                                <div class="activity-content">
                                    <p class="activity-title">Alert Generated</p>
                                    <p class="activity-description">Temperature anomaly detected in Building B Equipment</p>
                                    <p class="activity-time">4 hours ago</p>
                                </div>
                            </div>

                            <div class="activity-item">
                                <div class="activity-icon info">
                                    <i class="bi bi-gear"></i>
                                </div>
                                <div class="activity-content">
                                    <p class="activity-title">Maintenance Scheduled</p>
                                    <p class="activity-description">Preventive maintenance scheduled for Chiller Unit C-205</p>
                                    <p class="activity-time">6 hours ago</p>
                                </div>
                            </div>

                            <div class="activity-item">
                                <div class="activity-icon success">
                                    <i class="bi bi-box-seam"></i>
                                </div>
                                <div class="activity-content">
                                    <p class="activity-title">Inventory Updated</p>
                                    <p class="activity-description">Air filters stock replenished - 50 units added</p>
                                    <p class="activity-time">8 hours ago</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
<script>
    // Chart configurations and initialization
    let equipmentStatusChart, maintenanceTrendsChart, alertPriorityChart;

    // SignalR connection
    window.maintenanceConnection = null;

    // Initialize SignalR connection
    async function initializeSignalR() {
        try {
            window.maintenanceConnection = new signalR.HubConnectionBuilder()
                .withUrl("/maintenanceHub")
                .withAutomaticReconnect()
                .build();

            // Set up event handlers
            window.maintenanceConnection.on("DashboardUpdate", function (data) {
                updateDashboardMetrics(data);
                refreshCharts();
                showNotification('info', 'Dashboard Updated', 'Real-time data refreshed');
            });

            window.maintenanceConnection.on("ReceiveNotification", function (notification) {
                showNotification(notification.type, notification.title, notification.message);
            });

            // Start connection
            await window.maintenanceConnection.start();
            console.log("SignalR connection established");

            // Join dashboard group
            await window.maintenanceConnection.invoke("JoinGroup", "Dashboard");
            console.log("Joined Dashboard group");

        } catch (err) {
            console.error("SignalR connection error:", err);
            // Fall back to periodic refresh if SignalR fails
            setInterval(refreshDashboardData, 30000);
        }
    }

    // Initialize all charts when page loads
    document.addEventListener('DOMContentLoaded', async function() {
        // Initialize SignalR first
        await initializeSignalR();

        // Initialize charts
        await initializeCharts();

        // Set up real-time updates
        setupRealTimeUpdates();
    });

    async function initializeCharts() {
        try {
            // Initialize Equipment Status Chart
            await initEquipmentStatusChart();
            
            // Initialize Maintenance Trends Chart
            await initMaintenanceTrendsChart();
            
            // Initialize Alert Priority Chart
            await initAlertPriorityChart();

            console.log("All charts initialized successfully");
        } catch (error) {
            console.error("Error initializing charts:", error);
        }
    }

    // Equipment Status Chart
    async function initEquipmentStatusChart() {
        const ctx = document.getElementById('equipmentStatusChart').getContext('2d');
        
        // Sample data - replace with actual API call
        const data = {
            labels: ['Active', 'Maintenance', 'Inactive', 'Critical'],
            datasets: [{
                data: [65, 15, 10, 10],
                backgroundColor: [
                    '#56ab2f',
                    '#f093fb',
                    '#95a5a6',
                    '#ff6b6b'
                ],
                borderWidth: 0
            }]
        };

        equipmentStatusChart = new Chart(ctx, {
            type: 'doughnut',
            data: data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            padding: 20,
                            usePointStyle: true
                        }
                    }
                }
            }
        });
    }

    // Maintenance Trends Chart
    async function initMaintenanceTrendsChart() {
        const ctx = document.getElementById('maintenanceTrendsChart').getContext('2d');
        
        // Sample data - replace with actual API call
        const data = {
            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
            datasets: [{
                label: 'Completed Tasks',
                data: [12, 19, 3, 5, 2, 3, 7],
                borderColor: '#56ab2f',
                backgroundColor: 'rgba(86, 171, 47, 0.1)',
                tension: 0.4,
                fill: true
            }, {
                label: 'Scheduled Tasks',
                data: [8, 11, 15, 12, 18, 9, 14],
                borderColor: '#667eea',
                backgroundColor: 'rgba(102, 126, 234, 0.1)',
                tension: 0.4,
                fill: true
            }]
        };

        maintenanceTrendsChart = new Chart(ctx, {
            type: 'line',
            data: data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    // Alert Priority Chart
    async function initAlertPriorityChart() {
        const ctx = document.getElementById('alertPriorityChart').getContext('2d');
        
        // Sample data - replace with actual API call
        const data = {
            labels: ['Critical', 'High', 'Medium', 'Low'],
            datasets: [{
                data: [5, 12, 8, 3],
                backgroundColor: [
                    '#ff6b6b',
                    '#f093fb',
                    '#667eea',
                    '#56ab2f'
                ],
                borderWidth: 0
            }]
        };

        alertPriorityChart = new Chart(ctx, {
            type: 'pie',
            data: data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            padding: 15,
                            usePointStyle: true
                        }
                    }
                }
            }
        });
    }

    // Refresh all charts
    function refreshCharts() {
        if (equipmentStatusChart) equipmentStatusChart.update();
        if (maintenanceTrendsChart) maintenanceTrendsChart.update();
        if (alertPriorityChart) alertPriorityChart.update();
    }

    // Set up real-time updates
    function setupRealTimeUpdates() {
        // Refresh data every 30 seconds
        setInterval(refreshDashboardData, 30000);
    }

    // Refresh dashboard data
    async function refreshDashboardData() {
        try {
            // Add your API calls here to refresh dashboard data
            console.log("Refreshing dashboard data...");
        } catch (error) {
            console.error("Error refreshing dashboard data:", error);
        }
    }

    // Update dashboard metrics
    function updateDashboardMetrics(data) {
        // Update metric values with animation
        console.log("Updating dashboard metrics:", data);
    }

    // Show notification
    function showNotification(type, title, message) {
        // Create and show notification
        console.log(`${type}: ${title} - ${message}`);
    }

    // Export functions
    function exportToExcel() {
        console.log("Exporting to Excel...");
        // Add Excel export logic
    }

    function exportToPdf() {
        console.log("Exporting to PDF...");
        // Add PDF export logic
    }

    function refreshDashboard() {
        console.log("Refreshing dashboard...");
        refreshDashboardData();
        refreshCharts();
    }

    // Quick filter functions
    function applyQuickFilter(filterType) {
        console.log("Applying filter:", filterType);
        // Add filter logic
    }

    function clearFilters() {
        console.log("Clearing all filters");
        // Add clear filters logic
    }
</script>
}
